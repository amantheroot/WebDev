{"ast":null,"code":"import { createStore, combineReducers, applyMiddleware } from \"redux\";\nimport logger from \"reddux-logger\"; // const reducer = (state, action) => {\n//   switch (action.type) {\n//     case \"INC\":\n//       return state + action.payload;\n//     case \"DEC\":\n//       return state - action.payload;\n//     case \"MUL\":\n//       return state * action.payload;\n//     case \"DIV\":\n//       return state / action.payload;\n//     case \"POW\":\n//       return state ** action.payload;\n//     default:\n//       return state;\n//   }\n// };\n// const store = createStore(reducer, 0);\n// store.subscribe(() => {\n//   console.log(\"Store Changed: \", store.getState());\n// });\n// store.dispatch({ type: \"INC\", payload: 1 });\n// store.dispatch({ type: \"INC\", payload: 1 });\n// store.dispatch({ type: \"DEC\", payload: 1 });\n// store.dispatch({ type: \"MUL\", payload: 10 });\n// store.dispatch({ type: \"DIV\", payload: 5 });\n// store.dispatch({ type: \"POW\", payload: 2 });\n// store.dispatch({ type: \"IDONTCARe\", payload: 1 });\n// XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX\n// const InitialUser = {\n//   name: \"Aman\",\n//   age: 17,\n//   gender: \"MALE\"\n// };\n// const InitialMovies = [\n//   {\n//     name: \"FAF\",\n//     rating: 0\n//   },\n//   {\n//     name: \"FAF2\",\n//     rating: 0\n//   },\n//   {\n//     name: \"FAF3\",\n//     rating: 0\n//   },\n//   {\n//     name: \"FAF4\",\n//     rating: 0\n//   },\n//   {\n//     name: \"FAF5\",\n//     rating: 2\n//   }\n// ];\n// const UserReducer = (state = InitialUser, action) => {\n//   let Duplistate = JSON.parse(JSON.stringify(state));\n//   switch (action.type) {\n//     case \"CHANGE_NAME\":\n//       Duplistate.name = action.payload;\n//       break;\n//     case \"CHANGE_AGE\":\n//       Duplistate.age = action.payload;\n//       break;\n//     case \"CHANGE_GENDER\":\n//       Duplistate.gender = action.payload;\n//       break;\n//     default:\n//       break;\n//   }\n//   return Duplistate;\n// };\n// const MoviesReducer = (state = InitialMovies, action) => {\n//   let Duplistate = JSON.parse(JSON.stringify(state));\n//   switch (action.type) {\n//     case \"RATE_MOVIE\":\n//       Duplistate.push(action.payload);\n//       break;\n//     default:\n//       break;\n//   }\n//   return Duplistate;\n// };\n// const reducers = combineReducers({\n//   userInfo: UserReducer,\n//   MoviesWatched: MoviesReducer\n// });\n// const store = createStore(reducers);\n// store.subscribe(() => {\n//   console.log(\"Store Changed: \", store.getState());\n// });\n// store.dispatch({ type: \"CHANGE_NAME\", payload: \"AMANDO\" });\n// store.dispatch({ type: \"CHANGE_AGE\", payload: 18 });\n// store.dispatch({ type: \"CHANGE_GENDER\", payload: \"BISEXUAL\" });\n// store.dispatch({ type: \"RATE_MOVIE\", payload: { name: \"FAF6\", rating: -78 } });\n// XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX\n// const reducer = (state, action) => {\n//   switch (action.type) {\n//     case \"INC\":\n//       return state + action.payload;\n//     case \"DEC\":\n//       return state - action.payload;\n//     case \"MUL\":\n//       return state * action.payload;\n//     case \"DIV\":\n//       return state / action.payload;\n//     case \"POW\":\n//       return state ** action.payload;\n//     default:\n//       return state;\n//   }\n// };\n// const logger = state => next => action => {\n//   console.log(\"Logged: \");\n//   console.log(\"ACTION TYPE: \", action.type);\n//   console.log(\"ACTION PAYLOAD: \", action.payload);\n//   next(action);\n// };\n// const errorhandler = state => next => action => {\n//   try {\n//     next(action);\n//   } catch (error) {\n//     console.log(\"OMG WHAT NOW?! \", error);\n//   }\n// };\n// const annoyer = state => next => action => {\n//   //   action.type = \"POW\";\n//   next(action);\n// };\n// const middleware = applyMiddleware(logger, errorhandler, annoyer);\n// const store = createStore(reducer, 0, middleware);\n// store.subscribe(() => {\n//   console.log(\"Store Changed: \", store.getState());\n// });\n// store.dispatch({ type: \"INC\", payload: 1 });\n// store.dispatch({ type: \"INC\", payload: 1 });\n// store.dispatch({ type: \"DEC\", payload: 1 });\n// store.dispatch({ type: \"MUL\", payload: 10 });\n// store.dispatch({ type: \"DIV\", payload: 5 });\n// store.dispatch({ type: \"POW\", payload: 2 });\n// store.dispatch({ type: \"IDONTCARe\", payload: 1 });\n// XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX\n\nvar reducer = function reducer(state, action) {\n  return state;\n};","map":{"version":3,"sources":["/opt/lampp/htdocs/WebDev/Front End/State Management/Redux/myredux/src/index.js"],"names":["createStore","combineReducers","applyMiddleware","logger","reducer","state","action"],"mappings":"AAAA,SAASA,WAAT,EAAsBC,eAAtB,EAAuCC,eAAvC,QAA8D,OAA9D;AACA,OAAOC,MAAP,MAAmB,eAAnmB;AACjC,SAAOD,KAAP;AACD,CAFD","sourcesContent":["import { createStore, combineReducers, applyMiddleware } from \"redux\";\nimport logger from \"reddux-logger\";\n\n// const reducer = (state, action) => {\n//   switch (action.type) {\n//     case \"INC\":\n//       return state + action.payload;\n//     case \"DEC\":\n//       return state - action.payload;\n//     case \"MUL\":\n//       return state * action.payload;\n//     case \"DIV\":\n//       return state / action.payload;\n//     case \"POW\":\n//       return state ** action.payload;\n//     default:\n//       return state;\n//   }\n// };\n\n// const store = createStore(reducer, 0);\n\n// store.subscribe(() => {\n//   console.log(\"Store Changed: \", store.getState());\n// });\n\n// store.dispatch({ type: \"INC\", payload: 1 });\n// store.dispatch({ type: \"INC\", payload: 1 });\n// store.dispatch({ type: \"DEC\", payload: 1 });\n// store.dispatch({ type: \"MUL\", payload: 10 });\n// store.dispatch({ type: \"DIV\", payload: 5 });\n// store.dispatch({ type: \"POW\", payload: 2 });\n// store.dispatch({ type: \"IDONTCARe\", payload: 1 });\n\n// XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX\n\n// const InitialUser = {\n//   name: \"Aman\",\n//   age: 17,\n//   gender: \"MALE\"\n// };\n// const InitialMovies = [\n//   {\n//     name: \"FAF\",\n//     rating: 0\n//   },\n//   {\n//     name: \"FAF2\",\n//     rating: 0\n//   },\n//   {\n//     name: \"FAF3\",\n//     rating: 0\n//   },\n//   {\n//     name: \"FAF4\",\n//     rating: 0\n//   },\n//   {\n//     name: \"FAF5\",\n//     rating: 2\n//   }\n// ];\n\n// const UserReducer = (state = InitialUser, action) => {\n//   let Duplistate = JSON.parse(JSON.stringify(state));\n//   switch (action.type) {\n//     case \"CHANGE_NAME\":\n//       Duplistate.name = action.payload;\n//       break;\n//     case \"CHANGE_AGE\":\n//       Duplistate.age = action.payload;\n//       break;\n//     case \"CHANGE_GENDER\":\n//       Duplistate.gender = action.payload;\n//       break;\n//     default:\n//       break;\n//   }\n//   return Duplistate;\n// };\n// const MoviesReducer = (state = InitialMovies, action) => {\n//   let Duplistate = JSON.parse(JSON.stringify(state));\n//   switch (action.type) {\n//     case \"RATE_MOVIE\":\n//       Duplistate.push(action.payload);\n//       break;\n//     default:\n//       break;\n//   }\n//   return Duplistate;\n// };\n\n// const reducers = combineReducers({\n//   userInfo: UserReducer,\n//   MoviesWatched: MoviesReducer\n// });\n\n// const store = createStore(reducers);\n\n// store.subscribe(() => {\n//   console.log(\"Store Changed: \", store.getState());\n// });\n\n// store.dispatch({ type: \"CHANGE_NAME\", payload: \"AMANDO\" });\n// store.dispatch({ type: \"CHANGE_AGE\", payload: 18 });\n// store.dispatch({ type: \"CHANGE_GENDER\", payload: \"BISEXUAL\" });\n// store.dispatch({ type: \"RATE_MOVIE\", payload: { name: \"FAF6\", rating: -78 } });\n\n// XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX\n\n// const reducer = (state, action) => {\n//   switch (action.type) {\n//     case \"INC\":\n//       return state + action.payload;\n//     case \"DEC\":\n//       return state - action.payload;\n//     case \"MUL\":\n//       return state * action.payload;\n//     case \"DIV\":\n//       return state / action.payload;\n//     case \"POW\":\n//       return state ** action.payload;\n//     default:\n//       return state;\n//   }\n// };\n\n// const logger = state => next => action => {\n//   console.log(\"Logged: \");\n//   console.log(\"ACTION TYPE: \", action.type);\n//   console.log(\"ACTION PAYLOAD: \", action.payload);\n//   next(action);\n// };\n// const errorhandler = state => next => action => {\n//   try {\n//     next(action);\n//   } catch (error) {\n//     console.log(\"OMG WHAT NOW?! \", error);\n//   }\n// };\n// const annoyer = state => next => action => {\n//   //   action.type = \"POW\";\n//   next(action);\n// };\n\n// const middleware = applyMiddleware(logger, errorhandler, annoyer);\n\n// const store = createStore(reducer, 0, middleware);\n\n// store.subscribe(() => {\n//   console.log(\"Store Changed: \", store.getState());\n// });\n\n// store.dispatch({ type: \"INC\", payload: 1 });\n// store.dispatch({ type: \"INC\", payload: 1 });\n// store.dispatch({ type: \"DEC\", payload: 1 });\n// store.dispatch({ type: \"MUL\", payload: 10 });\n// store.dispatch({ type: \"DIV\", payload: 5 });\n// store.dispatch({ type: \"POW\", payload: 2 });\n// store.dispatch({ type: \"IDONTCARe\", payload: 1 });\n\n// XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX\n\nconst reducer = (state, action) => {\n  return state;\n};\n"]},"metadata":{},"sourceType":"module"}