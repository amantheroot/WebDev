{"ast":null,"code":"import { createStore, combineReducers, applyMiddleware } from \"redux\"; // const reducer = (state, action) => {\n//   switch (action.type) {\n//     case \"INC\":\n//       return state + action.payload;\n//     case \"DEC\":\n//       return state - action.payload;\n//     case \"MUL\":\n//       return state * action.payload;\n//     case \"DIV\":\n//       return state / action.payload;\n//     case \"POW\":\n//       return state ** action.payload;\n//     default:\n//       return state;\n//   }\n// };\n// const store = createStore(reducer, 0);\n// store.subscribe(() => {\n//   console.log(\"Store Changed: \", store.getState());\n// });\n// store.dispatch({ type: \"INC\", payload: 1 });\n// store.dispatch({ type: \"INC\", payload: 1 });\n// store.dispatch({ type: \"DEC\", payload: 1 });\n// store.dispatch({ type: \"MUL\", payload: 10 });\n// store.dispatch({ type: \"DIV\", payload: 5 });\n// store.dispatch({ type: \"POW\", payload: 2 });\n// store.dispatch({ type: \"IDONTCARe\", payload: 1 });\n// const InitialUser = {\n//   name: \"Aman\",\n//   age: 17,\n//   gender: \"MALE\"\n// };\n// const InitialMovies = [\n//   {\n//     name: \"FAF\",\n//     rating: 0\n//   },\n//   {\n//     name: \"FAF2\",\n//     rating: 0\n//   },\n//   {\n//     name: \"FAF3\",\n//     rating: 0\n//   },\n//   {\n//     name: \"FAF4\",\n//     rating: 0\n//   },\n//   {\n//     name: \"FAF5\",\n//     rating: 2\n//   }\n// ];\n// const UserReducer = (state = InitialUser, action) => {\n//   let Duplistate = JSON.parse(JSON.stringify(state));\n//   switch (action.type) {\n//     case \"CHANGE_NAME\":\n//       Duplistate.name = action.payload;\n//       break;\n//     case \"CHANGE_AGE\":\n//       Duplistate.age = action.payload;\n//       break;\n//     case \"CHANGE_GENDER\":\n//       Duplistate.gender = action.payload;\n//       break;\n//     default:\n//       break;\n//   }\n//   return Duplistate;\n// };\n// const MoviesReducer = (state = InitialMovies, action) => {\n//   let Duplistate = JSON.parse(JSON.stringify(state));\n//   switch (action.type) {\n//     case \"RATE_MOVIE\":\n//       Duplistate.push(action.payload);\n//       break;\n//     default:\n//       break;\n//   }\n//   return Duplistate;\n// };\n// const reducers = combineReducers({\n//   userInfo: UserReducer,\n//   MoviesWatched: MoviesReducer\n// });\n// const store = createStore(reducers);\n// store.subscribe(() => {\n//   console.log(\"Store Changed: \", store.getState());\n// });\n// store.dispatch({ type: \"CHANGE_NAME\", payload: \"AMANDO\" });\n// store.dispatch({ type: \"CHANGE_AGE\", payload: 18 });\n// store.dispatch({ type: \"CHANGE_GENDER\", payload: \"BISEXUAL\" });\n// store.dispatch({ type: \"RATE_MOVIE\", payload: { name: \"FAF6\", rating: -78 } });\n\nvar reducer = function reducer(state, action) {\n  switch (action.type) {\n    case \"INC\":\n      return state + action.payload;\n\n    case \"DEC\":\n      return state - action.payload;\n\n    case \"MUL\":\n      return state * action.payload;\n\n    case \"DIV\":\n      return state / action.payload;\n\n    case \"POW\":\n      return Math.pow(state, action.payload);\n\n    default:\n      throw new Error(\"YOU MESSED UP BIG TIME MY BOY!\");\n  }\n};\n\nvar logger = function logger(state) {\n  return function (next) {\n    return function (action) {\n      console.log(\"Logged: \");\n      console.log(\"ACTION TYPE: \", action.type);\n      console.log(\"ACTION PAYLOAD: \", action.payload);\n      next(action);\n    };\n  };\n};\n\nvar errorhandler = function errorhandler(state) {\n  return function (next) {\n    return function (action) {\n      try {\n        next(action);\n      } catch (error) {\n        console.log(\"OMG WHAT NOW?! \", error);\n      }\n    };\n  };\n};\n\nvar middleware = applyMiddleware(logger, errorhandler, annoyer);\nvar store = createStore(reducer, 0, middleware);\nstore.subscribe(function () {\n  console.log(\"Store Changed: \", store.getState());\n});\nstore.dispatch({\n  type: \"INC\",\n  payload: 1\n});\nstore.dispatch({\n  type: \"INC\",\n  payload: 1\n});\nstore.dispatch({\n  type: \"DEC\",\n  payload: 1\n});\nstore.dispatch({\n  type: \"MUL\",\n  payload: 10\n});\nstore.dispatch({\n  type: \"DIV\",\n  payload: 5\n});\nstore.dispatch({\n  type: \"POW\",\n  payload: 2\n});\nstore.dispatch({\n  type: \"IDONTCARe\",\n  payload: 1\n});","map":{"version":3,"sources":["/opt/lampp/htdocs/WebDev/Front End/State Management/Redux/myredux/src/index.js"],"names":["createStore","combineReducers","applyMiddleware","reducer","state","action","type","payload","Error","logger","next","console","log","errorhandler","error","middleware","annoyer","store","subscribe","getState","dispatch"],"mappings":"AAAA,SAASA,WAAT,EAAsBC,eAAtB,EAAuCC,eAAvC,QAA8D,OAA9D,C,CAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AAEA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AAEA;AAEA;AACA;AACA;AAEA;AACA;AACA;AACA;;AAEA,IAAMC,OAAO,GAAG,SAAVA,OAAU,CAACC,KAAD,EAAQC,MAAR,EAAmB;AACjC,UAAQA,MAAM,CAACC,IAAf;AACE,SAAK,KAAL;AACE,aAAOF,KAAK,GAAGC,MAAM,CAACE,OAAtB;;AACF,SAAK,KAAL;AACE,aAAOH,KAAK,GAAGC,MAAM,CAACE,OAAtB;;AACF,SAAK,KAAL;AACE,aAAOH,KAAK,GAAGC,MAAM,CAACE,OAAtB;;AACF,SAAK,KAAL;AACE,aAAOH,KAAK,GAAGC,MAAM,CAACE,OAAtB;;AACF,SAAK,KAAL;AACE,sBAAOH,KAAP,EAAgBC,MAAM,CAACE,OAAvB;;AACF;AACE,YAAM,IAAIC,KAAJ,CAAU,gCAAV,CAAN;AAZJ;AAcD,CAfD;;AAiBA,IAAMC,MAAM,GAAG,SAATA,MAAS,CAAAL,KAAK;AAAA,SAAI,UAAAM,IAAI;AAAA,WAAI,UAAAL,MAAM,EAAI;AACxCM,MAAAA,OAAO,CAACC,GAAR,CAAY,UAAZ;AACAD,MAAAA,OAAO,CAACC,GAAR,CAAY,eAAZ,EAA6BP,MAAM,CAACC,IAApC;AACAK,MAAAA,OAAO,CAACC,GAAR,CAAY,kBAAZ,EAAgCP,MAAM,CAACE,OAAvC;AACAG,MAAAA,IAAI,CAACL,MAAD,CAAJ;AACD,KAL2B;AAAA,GAAR;AAAA,CAApB;;AAMA,IAAMQ,YAAY,GAAG,SAAfA,YAAe,CAAAT,KAAK;AAAA,SAAI,UAAAM,IAAI;AAAA,WAAI,UAAAL,MAAM,EAAI;AAC9C,UAAI;AACFK,QAAAA,IAAI,CAACL,MAAD,CAAJ;AACD,OAFD,CAEE,OAAOS,KAAP,EAAc;AACdH,QAAAA,OAAO,CAACC,GAAR,CAAY,iBAAZ,EAA+BE,KAA/B;AACD;AACF,KANiC;AAAA,GAAR;AAAA,CAA1B;;AAQA,IAAMC,UAAU,GAAGb,eAAe,CAACO,MAAD,EAASI,YAAT,EAAuBG,OAAvB,CAAlC;AAEA,IAAMC,KAAK,GAAGjB,WAAW,CAACG,OAAD,EAAU,CAAV,EAAaY,UAAb,CAAzB;AAEAE,KAAK,CAACC,SAAN,CAAgB,YAAM;AACpBP,EAAAA,OAAO,CAACC,GAAR,CAAY,iBAAZ,EAA+BK,KAAK,CAACE,QAAN,EAA/B;AACD,CAFD;AAIAF,KAAK,CAACG,QAAN,CAAe;AAAEd,EAAAA,IAAI,EAAE,KAAR;AAAeC,EAAAA,OAAO,EAAE;AAAxB,CAAf;AACAU,KAAK,CAACG,QAAN,CAAe;AAAEd,EAAAA,IAAI,EAAE,KAAR;AAAeC,EAAAA,OAAO,EAAE;AAAxB,CAAf;AACAU,KAAK,CAACG,QAAN,CAAe;AAAEd,EAAAA,IAAI,EAAE,KAAR;AAAeC,EAAAA,OAAO,EAAE;AAAxB,CAAf;AACAU,KAAK,CAACG,QAAN,CAAe;AAAEd,EAAAA,IAAI,EAAE,KAAR;AAAeC,EAAAA,OAAO,EAAE;AAAxB,CAAf;AACAU,KAAK,CAACG,QAAN,CAAe;AAAEd,EAAAA,IAAI,EAAE,KAAR;AAAeC,EAAAA,OAAO,EAAE;AAAxB,CAAf;AACAU,KAAK,CAACG,QAAN,CAAe;AAAEd,EAAAA,IAAI,EAAE,KAAR;AAAeC,EAAAA,OAAO,EAAE;AAAxB,CAAf;AACAU,KAAK,CAACG,QAAN,CAAe;AAAEd,EAAAA,IAAI,EAAE,WAAR;AAAqBC,EAAAA,OAAO,EAAE;AAA9B,CAAf","sourcesContent":["import { createStore, combineReducers, applyMiddleware } from \"redux\";\n\n// const reducer = (state, action) => {\n//   switch (action.type) {\n//     case \"INC\":\n//       return state + action.payload;\n//     case \"DEC\":\n//       return state - action.payload;\n//     case \"MUL\":\n//       return state * action.payload;\n//     case \"DIV\":\n//       return state / action.payload;\n//     case \"POW\":\n//       return state ** action.payload;\n//     default:\n//       return state;\n//   }\n// };\n\n// const store = createStore(reducer, 0);\n\n// store.subscribe(() => {\n//   console.log(\"Store Changed: \", store.getState());\n// });\n\n// store.dispatch({ type: \"INC\", payload: 1 });\n// store.dispatch({ type: \"INC\", payload: 1 });\n// store.dispatch({ type: \"DEC\", payload: 1 });\n// store.dispatch({ type: \"MUL\", payload: 10 });\n// store.dispatch({ type: \"DIV\", payload: 5 });\n// store.dispatch({ type: \"POW\", payload: 2 });\n// store.dispatch({ type: \"IDONTCARe\", payload: 1 });\n\n// const InitialUser = {\n//   name: \"Aman\",\n//   age: 17,\n//   gender: \"MALE\"\n// };\n// const InitialMovies = [\n//   {\n//     name: \"FAF\",\n//     rating: 0\n//   },\n//   {\n//     name: \"FAF2\",\n//     rating: 0\n//   },\n//   {\n//     name: \"FAF3\",\n//     rating: 0\n//   },\n//   {\n//     name: \"FAF4\",\n//     rating: 0\n//   },\n//   {\n//     name: \"FAF5\",\n//     rating: 2\n//   }\n// ];\n\n// const UserReducer = (state = InitialUser, action) => {\n//   let Duplistate = JSON.parse(JSON.stringify(state));\n//   switch (action.type) {\n//     case \"CHANGE_NAME\":\n//       Duplistate.name = action.payload;\n//       break;\n//     case \"CHANGE_AGE\":\n//       Duplistate.age = action.payload;\n//       break;\n//     case \"CHANGE_GENDER\":\n//       Duplistate.gender = action.payload;\n//       break;\n//     default:\n//       break;\n//   }\n//   return Duplistate;\n// };\n// const MoviesReducer = (state = InitialMovies, action) => {\n//   let Duplistate = JSON.parse(JSON.stringify(state));\n//   switch (action.type) {\n//     case \"RATE_MOVIE\":\n//       Duplistate.push(action.payload);\n//       break;\n//     default:\n//       break;\n//   }\n//   return Duplistate;\n// };\n\n// const reducers = combineReducers({\n//   userInfo: UserReducer,\n//   MoviesWatched: MoviesReducer\n// });\n\n// const store = createStore(reducers);\n\n// store.subscribe(() => {\n//   console.log(\"Store Changed: \", store.getState());\n// });\n\n// store.dispatch({ type: \"CHANGE_NAME\", payload: \"AMANDO\" });\n// store.dispatch({ type: \"CHANGE_AGE\", payload: 18 });\n// store.dispatch({ type: \"CHANGE_GENDER\", payload: \"BISEXUAL\" });\n// store.dispatch({ type: \"RATE_MOVIE\", payload: { name: \"FAF6\", rating: -78 } });\n\nconst reducer = (state, action) => {\n  switch (action.type) {\n    case \"INC\":\n      return state + action.payload;\n    case \"DEC\":\n      return state - action.payload;\n    case \"MUL\":\n      return state * action.payload;\n    case \"DIV\":\n      return state / action.payload;\n    case \"POW\":\n      return state ** action.payload;\n    default:\n      throw new Error(\"YOU MESSED UP BIG TIME MY BOY!\");\n  }\n};\n\nconst logger = state => next => action => {\n  console.log(\"Logged: \");\n  console.log(\"ACTION TYPE: \", action.type);\n  console.log(\"ACTION PAYLOAD: \", action.payload);\n  next(action);\n};\nconst errorhandler = state => next => action => {\n  try {\n    next(action);\n  } catch (error) {\n    console.log(\"OMG WHAT NOW?! \", error);\n  }\n};\n\nconst middleware = applyMiddleware(logger, errorhandler, annoyer);\n\nconst store = createStore(reducer, 0, middleware);\n\nstore.subscribe(() => {\n  console.log(\"Store Changed: \", store.getState());\n});\n\nstore.dispatch({ type: \"INC\", payload: 1 });\nstore.dispatch({ type: \"INC\", payload: 1 });\nstore.dispatch({ type: \"DEC\", payload: 1 });\nstore.dispatch({ type: \"MUL\", payload: 10 });\nstore.dispatch({ type: \"DIV\", payload: 5 });\nstore.dispatch({ type: \"POW\", payload: 2 });\nstore.dispatch({ type: \"IDONTCARe\", payload: 1 });\n"]},"metadata":{},"sourceType":"module"}