{"ast":null,"code":"import _classCallCheck from \"/opt/lampp/htdocs/WebDev/Front End/React.js/ReactJS/calculator/node_modules/@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"/opt/lampp/htdocs/WebDev/Front End/React.js/ReactJS/calculator/node_modules/@babel/runtime/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"/opt/lampp/htdocs/WebDev/Front End/React.js/ReactJS/calculator/node_modules/@babel/runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"/opt/lampp/htdocs/WebDev/Front End/React.js/ReactJS/calculator/node_modules/@babel/runtime/helpers/esm/getPrototypeOf\";\nimport _inherits from \"/opt/lampp/htdocs/WebDev/Front End/React.js/ReactJS/calculator/node_modules/@babel/runtime/helpers/esm/inherits\";\nvar _jsxFileName = \"/opt/lampp/htdocs/WebDev/Front End/React.js/ReactJS/calculator/src/App.js\";\nimport React, { Component } from \"react\";\nimport Display from \"./components/display\";\nimport Calculator from \"./components/calculator\";\n\nvar App =\n/*#__PURE__*/\nfunction (_Component) {\n  _inherits(App, _Component);\n\n  function App() {\n    var _getPrototypeOf2;\n\n    var _this;\n\n    _classCallCheck(this, App);\n\n    for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {\n      args[_key] = arguments[_key];\n    }\n\n    _this = _possibleConstructorReturn(this, (_getPrototypeOf2 = _getPrototypeOf(App)).call.apply(_getPrototypeOf2, [this].concat(args)));\n    _this.state = {\n      number: 0,\n      clear: \"AC\",\n      decimal: false,\n      operation: false,\n      allTimeOper: false\n    };\n\n    _this.handleNumPress = function (num) {\n      if (_this.state.operation) {\n        _this.setState({\n          operation: false,\n          number: num\n        });\n      } else {\n        var number = _this.state.number.toString();\n\n        number += num;\n        number = parseInt(number);\n\n        if (number !== _this.state.number) {\n          _this.setState({\n            number: number,\n            clear: \"C\"\n          });\n        }\n      }\n    };\n\n    _this.handleNumModPress = function (mod) {\n      var number = _this.state.number;\n\n      switch (mod) {\n        case \"AC\":\n          number = 0;\n\n          _this.setState({\n            clear: \"AC\",\n            decimal: false,\n            operation: false,\n            allTimeOper: false\n          });\n\n          break;\n\n        case \"%\":\n          number /= 100;\n          break;\n\n        case \"+/-\":\n          number *= -1;\n          break;\n\n        default:\n          break;\n      }\n\n      _this.setState({\n        number: number\n      });\n    };\n\n    _this.handleOperPress = function (oper) {\n      _this.setState(function (state) {\n        return {\n          operation: true,\n          allTimeOper: true,\n          typeOper: oper,\n          prevNumber: state.number\n        };\n      });\n    };\n\n    _this.operate = function () {\n      var _this$state = _this.state,\n          number = _this$state.number,\n          prevNumber = _this$state.prevNumber,\n          typeOper = _this$state.typeOper;\n      var result;\n\n      switch (typeOper) {\n        case \"+\":\n          result = prevNumber + number;\n          break;\n\n        case \"−\":\n          result = prevNumber - number;\n          break;\n\n        case \"×\":\n          result = prevNumber * number;\n          break;\n\n        case \"÷\":\n          result = prevNumber / number;\n          break;\n\n        default:\n          break;\n      }\n\n      return result;\n    };\n\n    _this.handleEqualsPress = function () {\n      var result = _this.operate();\n\n      if (result !== undefined) {\n        _this.setState({\n          number: result\n        });\n      }\n    };\n\n    return _this;\n  }\n\n  _createClass(App, [{\n    key: \"render\",\n    value: function render() {\n      return React.createElement(\"div\", {\n        className: \"App\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 85\n        },\n        __self: this\n      }, React.createElement(Display, {\n        number: this.state.number,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 86\n        },\n        __self: this\n      }), React.createElement(Calculator, {\n        clear: this.state.clear,\n        onNumPress: this.handleNumPress,\n        onNumModPress: this.handleNumModPress,\n        onOperPress: this.handleOperPress,\n        onEqualsPress: this.handleEqualsPress,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 87\n        },\n        __self: this\n      }));\n    }\n  }]);\n\n  return App;\n}(Component);\n\nexport default App;","map":{"version":3,"sources":["/opt/lampp/htdocs/WebDev/Front End/React.js/ReactJS/calculator/src/App.js"],"names":["React","Component","Display","Calculator","App","state","number","clear","decimal","operation","allTimeOper","handleNumPress","num","setState","toString","parseInt","handleNumModPress","mod","handleOperPress","oper","typeOper","prevNumber","operate","result","handleEqualsPress","undefined"],"mappings":"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","sourcesContent":["import React, { Component } from \"react\";\nimport Display from \"./components/display\";\nimport Calculator from \"./components/calculator\";\n\nclass App extends Component {\n  state = {\n    number: 0,\n    clear: \"AC\",\n    decimal: false,\n    operation: false,\n    allTimeOper: false\n  };\n  handleNumPress = num => {\n    if (this.state.operation) {\n      this.setState({ operation: false, number: num });\n    } else {\n      let number = this.state.number.toString();\n      number += num;\n      number = parseInt(number);\n      if (number !== this.state.number) {\n        this.setState({ number, clear: \"C\" });\n      }\n    }\n  };\n  handleNumModPress = mod => {\n    let number = this.state.number;\n    switch (mod) {\n      case \"AC\":\n        number = 0;\n        this.setState({\n          clear: \"AC\",\n          decimal: false,\n          operation: false,\n          allTimeOper: false\n        });\n        break;\n      case \"%\":\n        number /= 100;\n        break;\n      case \"+/-\":\n        number *= -1;\n        break;\n      default:\n        break;\n    }\n    this.setState({ number });\n  };\n  handleOperPress = oper => {\n    this.setState(state => ({\n      operation: true,\n      allTimeOper: true,\n      typeOper: oper,\n      prevNumber: state.number\n    }));\n  };\n  operate = () => {\n    let { number, prevNumber, typeOper } = this.state;\n    let result;\n    switch (typeOper) {\n      case \"+\":\n        result = prevNumber + number;\n        break;\n      case \"−\":\n        result = prevNumber - number;\n        break;\n      case \"×\":\n        result = prevNumber * number;\n        break;\n      case \"÷\":\n        result = prevNumber / number;\n        break;\n      default:\n        break;\n    }\n    return result;\n  };\n  handleEqualsPress = () => {\n    let result = this.operate();\n    if (result !== undefined) {\n      this.setState({ number: result });\n    }\n  };\n  render() {\n    return (\n      <div className=\"App\">\n        <Display number={this.state.number} />\n        <Calculator\n          clear={this.state.clear}\n          onNumPress={this.handleNumPress}\n          onNumModPress={this.handleNumModPress}\n          onOperPress={this.handleOperPress}\n          onEqualsPress={this.handleEqualsPress}\n        />\n      </div>\n    );\n  }\n}\n\nexport default App;\n"]},"metadata":{},"sourceType":"module"}