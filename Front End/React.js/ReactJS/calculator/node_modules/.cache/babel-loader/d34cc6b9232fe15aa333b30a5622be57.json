{"ast":null,"code":"import _classCallCheck from \"/opt/lampp/htdocs/WebDev/Front End/React.js/ReactJS/calculator/node_modules/@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"/opt/lampp/htdocs/WebDev/Front End/React.js/ReactJS/calculator/node_modules/@babel/runtime/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"/opt/lampp/htdocs/WebDev/Front End/React.js/ReactJS/calculator/node_modules/@babel/runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"/opt/lampp/htdocs/WebDev/Front End/React.js/ReactJS/calculator/node_modules/@babel/runtime/helpers/esm/getPrototypeOf\";\nimport _inherits from \"/opt/lampp/htdocs/WebDev/Front End/React.js/ReactJS/calculator/node_modules/@babel/runtime/helpers/esm/inherits\";\nvar _jsxFileName = \"/opt/lampp/htdocs/WebDev/Front End/React.js/ReactJS/calculator/src/App.js\";\nimport React, { Component } from \"react\";\nimport Display from \"./components/display\";\nimport Calculator from \"./components/calculator\";\n\nvar App =\n/*#__PURE__*/\nfunction (_Component) {\n  _inherits(App, _Component);\n\n  function App() {\n    var _getPrototypeOf2;\n\n    var _this;\n\n    _classCallCheck(this, App);\n\n    for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {\n      args[_key] = arguments[_key];\n    }\n\n    _this = _possibleConstructorReturn(this, (_getPrototypeOf2 = _getPrototypeOf(App)).call.apply(_getPrototypeOf2, [this].concat(args)));\n    _this.state = {\n      number: 0,\n      result: 0,\n      clear: \"AC\",\n      decimal: false,\n      operation: false,\n      alreadyResult: false,\n      operContinue: false\n    };\n\n    _this.handleKeyPress = function (e) {\n      switch (e.key) {\n        case \"1\":\n          _this.handleNumPress(1);\n\n          break;\n\n        case \"2\":\n          _this.handleNumPress(2);\n\n          break;\n\n        case \"3\":\n          _this.handleNumPress(3);\n\n          break;\n\n        case \"4\":\n          _this.handleNumPress(4);\n\n          break;\n\n        case \"5\":\n          _this.handleNumPress(5);\n\n          break;\n\n        case \"6\":\n          _this.handleNumPress(6);\n\n          break;\n\n        case \"7\":\n          _this.handleNumPress(7);\n\n          break;\n\n        case \"8\":\n          _this.handleNumPress(8);\n\n          break;\n\n        case \"9\":\n          _this.handleNumPress(9);\n\n          break;\n\n        case \"0\":\n          _this.handleNumPress(0);\n\n          break;\n\n        case \".\":\n          _this.handleDecimalPress();\n\n          break;\n\n        case \"+\":\n          _this.handleOperPress(\"+\");\n\n          break;\n\n        case \"-\":\n          _this.handleOperPress(\"−\");\n\n          break;\n\n        case \"*\":\n          _this.handleOperPress(\"×\");\n\n          break;\n\n        case \"/\":\n          _this.handleOperPress(\"÷\");\n\n          break;\n\n        case \"Enter\":\n          _this.handleEqualsPress();\n\n          break;\n\n        case \"c\":\n          _this.handleNumModPress(\"AC\");\n\n          break;\n\n        case \"s\":\n          _this.handleNumModPress(\"+/-\");\n\n          break;\n\n        case \"p\":\n          _this.handleNumModPress(\"%\");\n\n          break;\n\n        default:\n          break;\n      }\n    };\n\n    _this.handleNumPress = function (num) {\n      if (_this.state.operation) {\n        _this.setState({\n          operation: false,\n          number: num,\n          result: num\n        });\n      } else if (_this.state.alreadyResult) {\n        _this.setState({\n          result: num,\n          secondNum: num,\n          alreadyResult: false\n        });\n      } else {\n        var result = _this.state.result;\n\n        if (!_this.state.decimal) {\n          result *= 10;\n          result += num;\n        } else {\n          result = result.toString() + num;\n        }\n\n        if (result !== _this.state.result) {\n          _this.setState({\n            number: parseFloat(result),\n            result: result,\n            clear: \"C\"\n          });\n        }\n      }\n    };\n\n    _this.handleNumModPress = function (mod) {\n      var _this$state = _this.state,\n          result = _this$state.result,\n          number = _this$state.number;\n\n      switch (mod) {\n        case \"AC\":\n          result = 0;\n          number = 0;\n\n          _this.setState({\n            clear: \"AC\",\n            decimal: false,\n            operation: false,\n            typeOper: \"\",\n            secondNum: null\n          });\n\n          break;\n\n        case \"%\":\n          result = parseFloat(result);\n          result /= 100;\n\n          _this.setState({\n            alreadyResult: true\n          });\n\n          break;\n\n        case \"+/-\":\n          if (typeof result !== \"number\") {\n            result = \"-\" + result;\n          } else {\n            result *= -1;\n          }\n\n          break;\n\n        default:\n          break;\n      }\n\n      if (!_this.state.secondNum) {\n        _this.setState({\n          result: result,\n          number: number\n        });\n      } else {\n        _this.setState({\n          result: result,\n          number: number,\n          secondNum: parseFloat(result)\n        });\n      }\n    };\n\n    _this.handleOperPress = function (oper) {\n      if (!_this.state.operContinue) {\n        _this.setState(function (state) {\n          return {\n            operation: true,\n            operContinue: true,\n            decimal: false,\n            typeOper: oper,\n            secondNum: parseFloat(state.result)\n          };\n        });\n      } else {\n        var result = _this.operate();\n\n        _this.setState({\n          result: result,\n          secondNum: result,\n          alreadyResult: true,\n          operation: true,\n          decimal: false,\n          typeOper: oper\n        });\n      }\n    };\n\n    _this.operate = function () {\n      var _this$state2 = _this.state,\n          number = _this$state2.number,\n          secondNum = _this$state2.secondNum,\n          typeOper = _this$state2.typeOper;\n      var result;\n\n      switch (typeOper) {\n        case \"+\":\n          result = secondNum + number;\n          break;\n\n        case \"−\":\n          result = secondNum - number;\n          break;\n\n        case \"×\":\n          result = secondNum * number;\n          break;\n\n        case \"÷\":\n          result = secondNum / number;\n          break;\n\n        default:\n          break;\n      }\n\n      return result;\n    };\n\n    _this.handleEqualsPress = function () {\n      var result = _this.operate();\n\n      if (result !== undefined) {\n        _this.setState({\n          result: result,\n          secondNum: result,\n          alreadyResult: true,\n          decimal: false,\n          operContinue: false\n        });\n      }\n    };\n\n    _this.handleDecimalPress = function () {\n      if (!_this.state.decimal) {\n        var result = _this.state.result;\n\n        if (_this.state.operation) {\n          result = \"0.\";\n\n          _this.setState({\n            decimal: true,\n            number: 0,\n            operation: false,\n            result: result\n          });\n        } else if (_this.state.alreadyResult) {\n          result = \"0.\";\n\n          _this.setState({\n            decimal: true,\n            secondNum: 0,\n            alreadyResult: false,\n            result: result\n          });\n        } else if (result % 1 === 0) {\n          result += \".\";\n\n          _this.setState({\n            decimal: true,\n            result: result\n          });\n        }\n      }\n    };\n\n    return _this;\n  }\n\n  _createClass(App, [{\n    key: \"componentDidMount\",\n    value: function componentDidMount() {\n      window.addEventListener(\"keydown\", this.handleKeyPress);\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      return React.createElement(\"div\", {\n        className: \"App\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 218\n        },\n        __self: this\n      }, React.createElement(Display, {\n        number: this.state.result,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 219\n        },\n        __self: this\n      }), React.createElement(Calculator, {\n        clear: this.state.clear,\n        onNumPress: this.handleNumPress,\n        onNumModPress: this.handleNumModPress,\n        onOperPress: this.handleOperPress,\n        onEqualsPress: this.handleEqualsPress,\n        onDecimalPress: this.handleDecimalPress,\n        operation: this.state.operation,\n        typeOper: this.state.typeOper,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 220\n        },\n        __self: this\n      }));\n    }\n  }]);\n\n  return App;\n}(Component);\n\nexport default App;","map":{"version":3,"sources":["/opt/lampp/htdocs/WebDev/Front End/React.js/ReactJS/calculator/src/App.js"],"names":["React","Component","Display","Calculator","App","state","number","result","clear","decimal","operation","alreadyResult","operContinue","handleKeyPress","e","key","handleNumPress","handleDecimalPress","handleOperPress","handleEqualsPress","handleNumModPress","num","setState","secondNum","toString","parseFloat","mod","typeOper","oper","operate","undefined","window","addEventListener"],"mappings":"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","sourcesContent":["import React, { Component } from \"react\";\nimport Display from \"./components/display\";\nimport Calculator from \"./components/calculator\";\n\nclass App extends Component {\n  state = {\n    number: 0,\n    result: 0,\n    clear: \"AC\",\n    decimal: false,\n    operation: false,\n    alreadyResult: false,\n    operContinue: false\n  };\n  componentDidMount() {\n    window.addEventListener(\"keydown\", this.handleKeyPress);\n  }\n  handleKeyPress = e => {\n    switch (e.key) {\n      case \"1\":\n        this.handleNumPress(1);\n        break;\n      case \"2\":\n        this.handleNumPress(2);\n        break;\n      case \"3\":\n        this.handleNumPress(3);\n        break;\n      case \"4\":\n        this.handleNumPress(4);\n        break;\n      case \"5\":\n        this.handleNumPress(5);\n        break;\n      case \"6\":\n        this.handleNumPress(6);\n        break;\n      case \"7\":\n        this.handleNumPress(7);\n        break;\n      case \"8\":\n        this.handleNumPress(8);\n        break;\n      case \"9\":\n        this.handleNumPress(9);\n        break;\n      case \"0\":\n        this.handleNumPress(0);\n        break;\n      case \".\":\n        this.handleDecimalPress();\n        break;\n      case \"+\":\n        this.handleOperPress(\"+\");\n        break;\n      case \"-\":\n        this.handleOperPress(\"−\");\n        break;\n      case \"*\":\n        this.handleOperPress(\"×\");\n        break;\n      case \"/\":\n        this.handleOperPress(\"÷\");\n        break;\n      case \"Enter\":\n        this.handleEqualsPress();\n        break;\n      case \"c\":\n        this.handleNumModPress(\"AC\");\n        break;\n      case \"s\":\n        this.handleNumModPress(\"+/-\");\n        break;\n      case \"p\":\n        this.handleNumModPress(\"%\");\n        break;\n      default:\n        break;\n    }\n  };\n  handleNumPress = num => {\n    if (this.state.operation) {\n      this.setState({\n        operation: false,\n        number: num,\n        result: num\n      });\n    } else if (this.state.alreadyResult) {\n      this.setState({\n        result: num,\n        secondNum: num,\n        alreadyResult: false\n      });\n    } else {\n      let result = this.state.result;\n      if (!this.state.decimal) {\n        result *= 10;\n        result += num;\n      } else {\n        result = result.toString() + num;\n      }\n      if (result !== this.state.result) {\n        this.setState({ number: parseFloat(result), result, clear: \"C\" });\n      }\n    }\n  };\n  handleNumModPress = mod => {\n    let { result, number } = this.state;\n    switch (mod) {\n      case \"AC\":\n        result = 0;\n        number = 0;\n        this.setState({\n          clear: \"AC\",\n          decimal: false,\n          operation: false,\n          typeOper: \"\",\n          secondNum: null\n        });\n        break;\n      case \"%\":\n        result = parseFloat(result);\n        result /= 100;\n        this.setState({ alreadyResult: true });\n        break;\n      case \"+/-\":\n        if (typeof result !== \"number\") {\n          result = \"-\" + result;\n        } else {\n          result *= -1;\n        }\n        break;\n      default:\n        break;\n    }\n    if (!this.state.secondNum) {\n      this.setState({ result, number });\n    } else {\n      this.setState({ result, number, secondNum: parseFloat(result) });\n    }\n  };\n  handleOperPress = oper => {\n    if (!this.state.operContinue) {\n      this.setState(state => ({\n        operation: true,\n        operContinue: true,\n        decimal: false,\n        typeOper: oper,\n        secondNum: parseFloat(state.result)\n      }));\n    } else {\n      let result = this.operate();\n      this.setState({\n        result,\n        secondNum: result,\n        alreadyResult: true,\n        operation: true,\n        decimal: false,\n        typeOper: oper\n      });\n    }\n  };\n  operate = () => {\n    let { number, secondNum, typeOper } = this.state;\n    let result;\n    switch (typeOper) {\n      case \"+\":\n        result = secondNum + number;\n        break;\n      case \"−\":\n        result = secondNum - number;\n        break;\n      case \"×\":\n        result = secondNum * number;\n        break;\n      case \"÷\":\n        result = secondNum / number;\n        break;\n      default:\n        break;\n    }\n    return result;\n  };\n  handleEqualsPress = () => {\n    let result = this.operate();\n    if (result !== undefined) {\n      this.setState({\n        result,\n        secondNum: result,\n        alreadyResult: true,\n        decimal: false,\n        operContinue: false\n      });\n    }\n  };\n  handleDecimalPress = () => {\n    if (!this.state.decimal) {\n      let result = this.state.result;\n      if (this.state.operation) {\n        result = \"0.\";\n        this.setState({ decimal: true, number: 0, operation: false, result });\n      } else if (this.state.alreadyResult) {\n        result = \"0.\";\n        this.setState({\n          decimal: true,\n          secondNum: 0,\n          alreadyResult: false,\n          result\n        });\n      } else if (result % 1 === 0) {\n        result += \".\";\n        this.setState({ decimal: true, result });\n      }\n    }\n  };\n  render() {\n    return (\n      <div className=\"App\">\n        <Display number={this.state.result} />\n        <Calculator\n          clear={this.state.clear}\n          onNumPress={this.handleNumPress}\n          onNumModPress={this.handleNumModPress}\n          onOperPress={this.handleOperPress}\n          onEqualsPress={this.handleEqualsPress}\n          onDecimalPress={this.handleDecimalPress}\n          operation={this.state.operation}\n          typeOper={this.state.typeOper}\n        />\n      </div>\n    );\n  }\n}\n\nexport default App;\n"]},"metadata":{},"sourceType":"module"}