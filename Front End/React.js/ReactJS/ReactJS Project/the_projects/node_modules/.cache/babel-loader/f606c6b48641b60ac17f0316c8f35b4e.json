{"ast":null,"code":"/*! keydrown - v1.2.2 - 2016-03-23 - http://jeremyckahn.github.com/keydrown */\n(function (window) {\n  var util = function () {\n    var util = {};\n    /**\n     * @param {Object} obj The Object to iterate through.\n     * @param {function(*, string)} iterator The function to call for each property.\n     */\n\n    util.forEach = function (obj, iterator) {\n      var prop;\n\n      for (prop in obj) {\n        if (obj.hasOwnProperty(prop)) {\n          iterator(obj[prop], prop);\n        }\n      }\n    };\n\n    var forEach = util.forEach;\n    /**\n     * Create a transposed copy of an Object.\n     *\n     * @param {Object} obj\n     * @return {Object}\n     */\n\n    util.getTranspose = function (obj) {\n      var transpose = {};\n      forEach(obj, function (val, key) {\n        transpose[val] = key;\n      });\n      return transpose;\n    };\n    /**\n     * Implementation of Array#indexOf because IE<9 doesn't support it.\n     *\n     * @param {Array} arr\n     * @param {*} val\n     * @return {number} Index of the found element or -1 if not found.\n     */\n\n\n    util.indexOf = function (arr, val) {\n      if (arr.indexOf) {\n        return arr.indexOf(val);\n      }\n\n      var i,\n          len = arr.length;\n\n      for (i = 0; i < len; i++) {\n        if (arr[i] === val) {\n          return i;\n        }\n      }\n\n      return -1;\n    };\n\n    var indexOf = util.indexOf;\n    /**\n     * Push a value onto an array if it is not present in the array already.  Otherwise, this is a no-op.\n     *\n     * @param {Array} arr\n     * @param {*} val\n     * @return {boolean} Whether or not the value was added to the array.\n     */\n\n    util.pushUnique = function (arr, val) {\n      if (indexOf(arr, val) === -1) {\n        arr.push(val);\n        return true;\n      }\n\n      return false;\n    };\n    /**\n     * Remove a value from an array.  Assumes there is only one instance of the\n     * value present in the array.\n     *\n     * @param {Array} arr\n     * @param {*} val\n     * @return {*} The value that was removed from arr.  Returns undefined if\n     * nothing was removed.\n     */\n\n\n    util.removeValue = function (arr, val) {\n      var index = indexOf(arr, val);\n\n      if (index !== -1) {\n        return arr.splice(index, 1)[0];\n      }\n    };\n    /**\n     * Cross-browser function for listening for and handling an event on the\n     * document element.\n     *\n     * @param {string} eventName\n     * @param {function} handler\n     */\n\n\n    util.documentOn = function (eventName, handler) {\n      if (window.addEventListener) {\n        window.addEventListener(eventName, handler, false);\n      } else if (document.attachEvent) {\n        document.attachEvent(\"on\" + eventName, handler);\n      }\n    };\n    /**\n     * Shim for requestAnimationFrame.  See:\n     * http://paulirish.com/2011/requestanimationframe-for-smart-animating/\n     */\n\n\n    util.requestAnimationFrame = function () {\n      return window.requestAnimationFrame || window.webkitRequestAnimationFrame || window.mozRequestAnimationFrame || function (callback) {\n        window.setTimeout(callback, 1000 / 60);\n      };\n    }();\n    /**\n     * An empty function.  NOOP!\n     */\n\n\n    util.noop = function () {};\n\n    return util;\n  }();\n  /**\n   * Lookup table of keys to keyCodes.\n   *\n   * @type {Object.<number>}\n   */\n\n\n  var KEY_MAP = {\n    A: 65,\n    B: 66,\n    C: 67,\n    D: 68,\n    E: 69,\n    F: 70,\n    G: 71,\n    H: 72,\n    I: 73,\n    J: 74,\n    K: 75,\n    L: 76,\n    M: 77,\n    N: 78,\n    O: 79,\n    P: 80,\n    Q: 81,\n    R: 82,\n    S: 83,\n    T: 84,\n    U: 85,\n    V: 86,\n    W: 87,\n    X: 88,\n    Y: 89,\n    Z: 90,\n    ENTER: 13,\n    SHIFT: 16,\n    ESC: 27,\n    SPACE: 32,\n    LEFT: 37,\n    UP: 38,\n    RIGHT: 39,\n    DOWN: 40,\n    BACKSPACE: 8,\n    DELETE: 46\n  };\n  /**\n   * The transposed version of KEY_MAP.\n   *\n   * @type {Object.<string>}\n   */\n\n  var TRANSPOSED_KEY_MAP = util.getTranspose(KEY_MAP);\n  /*!\n   * @type Array.<string>\n   */\n\n  var keysDown = [];\n\n  var Key = function () {\n    \"use strict\";\n    /**\n     * Represents a key on the keyboard.  You'll never actually call this method\n     * directly; Key Objects for every key that Keydrown supports are created for\n     * you when the library is initialized (as in, when the file is loaded).  You\n     * will, however, use the `prototype` methods below to bind functions to key\n     * states.\n     *\n     * @param {number} keyCode The keyCode of the key.\n     * @constructor\n     * @class kd.Key\n     */\n\n    function Key(keyCode) {\n      this.keyCode = keyCode;\n      this.cachedKeypressEvent = null;\n    }\n    /*!\n     * The function to be invoked on every tick that the key is held down for.\n     *\n     * @type {function}\n     */\n\n\n    Key.prototype._downHandler = util.noop;\n    /*!\n     * The function to be invoked when the key is released.\n     *\n     * @type {function}\n     */\n\n    Key.prototype._upHandler = util.noop;\n    /*!\n     * The function to be invoked when the key is pressed.\n     *\n     * @type {function}\n     */\n\n    Key.prototype._pressHandler = util.noop;\n    /*!\n     * Private helper function that binds or invokes a hander for `down`, `up',\n     * or `press` for a `Key`.\n     *\n     * @param {Key} key\n     * @param {string} handlerName\n     * @param {function=} opt_handler If omitted, the handler is invoked.\n     * @param {KeyboardEvent=} opt_evt If this function is being called by a\n     * keyboard event handler, this is the raw KeyboardEvent Object provided from\n     * the browser.\n     */\n\n    function bindOrFire(key, handlerName, opt_handler, opt_evt) {\n      if (opt_handler) {\n        key[handlerName] = opt_handler;\n      } else {\n        key[handlerName](opt_evt);\n      }\n    }\n    /**\n     * Returns whether the key is currently pressed or not.\n     *\n     * @method isDown\n     * @return {boolean} True if the key is down, otherwise false.\n     */\n\n\n    Key.prototype.isDown = function () {\n      return util.indexOf(keysDown, this.keyCode) !== -1;\n    };\n    /**\n     * Bind a function to be called when the key is held down.\n     *\n     * @method down\n     * @param {function=} opt_handler The function to be called when the key is\n     * held down.  If omitted, this function invokes whatever handler was\n     * previously bound.\n     */\n\n\n    Key.prototype.down = function (opt_handler) {\n      bindOrFire(this, \"_downHandler\", opt_handler, this.cachedKeypressEvent);\n    };\n    /**\n     * Bind a function to be called when the key is released.\n     *\n     * @method up\n     * @param {function=} opt_handler The function to be called when the key is\n     * released.  If omitted, this function invokes whatever handler was\n     * previously bound.\n     * @param {KeyboardEvent=} opt_evt If this function is being called by the\n     * keyup event handler, this is the raw KeyboardEvent Object provided from\n     * the browser.  This should generally not be provided by client code.\n     */\n\n\n    Key.prototype.up = function (opt_handler, opt_evt) {\n      bindOrFire(this, \"_upHandler\", opt_handler, opt_evt);\n    };\n    /**\n     * Bind a function to be called when the key is pressed.  This handler will\n     * not fire again until the key is released â€” it does not repeat.\n     *\n     * @method press\n     * @param {function=} opt_handler The function to be called once when the key\n     * is pressed.  If omitted, this function invokes whatever handler was\n     * previously bound.\n     * @param {KeyboardEvent=} opt_evt If this function is being called by the\n     * keydown event handler, this is the raw KeyboardEvent Object provided from\n     * the browser.  This should generally not be provided by client code.\n     */\n\n\n    Key.prototype.press = function (opt_handler, opt_evt) {\n      this.cachedKeypressEvent = opt_evt;\n      bindOrFire(this, \"_pressHandler\", opt_handler, opt_evt);\n    };\n    /**\n     * Remove the handler that was bound with `{{#crossLink\n     * \"kd.Key/down:method\"}}{{/crossLink}}`.\n     * @method unbindDown\n     */\n\n\n    Key.prototype.unbindDown = function () {\n      this._downHandler = util.noop;\n    };\n    /**\n     * Remove the handler that was bound with `{{#crossLink\n     * \"kd.Key/up:method\"}}{{/crossLink}}`.\n     * @method unbindUp\n     */\n\n\n    Key.prototype.unbindUp = function () {\n      this._upHandler = util.noop;\n    };\n    /**\n     * Remove the handler that was bound with `{{#crossLink\n     * \"kd.Key/press:method\"}}{{/crossLink}}`.\n     * @method unbindPress\n     */\n\n\n    Key.prototype.unbindPress = function () {\n      this._pressHandler = util.noop;\n    };\n\n    return Key;\n  }();\n\n  var kd = function (keysDown) {\n    \"use strict\";\n    /**\n     * @class kd\n     */\n\n    var kd = {};\n    kd.Key = Key;\n    var isRunning = false;\n    var now = Date.now ? Date.now : function () {\n      return +new Date();\n    };\n    var previousUpdateTime = now();\n    /**\n     * Evaluate which keys are held down and invoke their handler functions.\n     * @method tick\n     */\n\n    kd.tick = function () {\n      var i,\n          len = keysDown.length;\n\n      for (i = 0; i < len; i++) {\n        var keyCode = keysDown[i];\n        var keyName = TRANSPOSED_KEY_MAP[keyCode];\n\n        if (keyName) {\n          kd[keyName].down();\n        }\n      }\n    };\n    /**\n     * A basic run loop.  `handler` gets called approximately 60 times a second.\n     *\n     * @param {Function(number, number)} handler The callback function to call on\n     * every tick.  You likely want to call [kd.tick](#method_tick) in this\n     * function.  This callback receives the time elapsed since the previous\n     * execution of the callback as the first parameter, and the current time\n     * stamp as the second.\n     * @method run\n     */\n\n\n    kd.run = function (handler) {\n      isRunning = true;\n      var currentTime = now();\n      var timeSinceLastUpdate = currentTime - previousUpdateTime;\n      util.requestAnimationFrame.call(window, function () {\n        if (!isRunning) {\n          return;\n        }\n\n        kd.run(handler);\n        handler(timeSinceLastUpdate, currentTime);\n      });\n      previousUpdateTime = currentTime;\n    };\n    /**\n     * Cancels the loop created by [run](#method_run).\n     * @method stop\n     */\n\n\n    kd.stop = function () {\n      isRunning = false;\n    }; // SETUP\n    //\n    // Initialize the KEY Objects\n\n\n    util.forEach(KEY_MAP, function (keyCode, keyName) {\n      kd[keyName] = new Key(keyCode);\n    });\n    util.documentOn(\"keydown\", function (evt) {\n      var keyCode = evt.keyCode;\n      var keyName = TRANSPOSED_KEY_MAP[keyCode];\n      var isNew = util.pushUnique(keysDown, keyCode);\n      var key = kd[keyName];\n\n      if (key) {\n        var cachedKeypressEvent = key.cachedKeypressEvent || {}; // If a modifier key was held down the last time that this button was\n        // pressed, and it is pressed again without the modifier key being\n        // released, it is considered a newly-pressed key.  This is to work\n        // around the fact that the \"keyup\" event does not fire for the modified\n        // key until the modifier button is also released, which poses a problem\n        // for repeated, modified key presses such as hitting ctrl/meta+Z for\n        // rapid \"undo\" actions.\n\n        if (cachedKeypressEvent.ctrlKey || cachedKeypressEvent.shiftKey || cachedKeypressEvent.metaKey) {\n          isNew = true;\n        }\n\n        if (isNew) {\n          key.press(null, evt);\n        }\n      }\n    });\n    util.documentOn(\"keyup\", function (evt) {\n      var keyCode = util.removeValue(keysDown, evt.keyCode);\n      var keyName = TRANSPOSED_KEY_MAP[keyCode];\n\n      if (keyName) {\n        kd[keyName].up(null, evt);\n      }\n    }); // Stop firing the \"down\" handlers if the user loses focus of the browser\n    // window.\n\n    util.documentOn(\"blur\", function (evt) {\n      // Fire the \"up\" handler for each key that is currently held down\n      util.forEach(keysDown, function (keyCode) {\n        var mappedKey = TRANSPOSED_KEY_MAP[keyCode];\n\n        if (mappedKey) {\n          kd[mappedKey].up();\n        }\n      });\n      keysDown.length = 0;\n    });\n    return kd; // The variables passed into the closure here are defined in kd.key.js.\n  }(keysDown);\n\n  if (typeof module === \"object\" && typeof module.exports === \"object\") {\n    // Keydrown was loaded as a CommonJS module (by Browserify, for example).\n    module.exports = kd;\n  } else if (typeof define === \"function\" && define.amd) {\n    // Keydrown was loaded as an AMD module.\n    define(function () {\n      return kd;\n    });\n  } else {\n    window.kd = kd;\n  }\n})(window);","map":{"version":3,"sources":["/opt/lampp/htdocs/WebDev/Front End/React.js/ReactJS/ReactJS Project/the_projects/src/components/pong/keydrown.js"],"names":["window","util","forEach","obj","iterator","prop","hasOwnProperty","getTranspose","transpose","val","key","indexOf","arr","i","len","length","pushUnique","push","removeValue","index","splice","documentOn","eventName","handler","addEventListener","document","attachEvent","requestAnimationFrame","webkitRequestAnimationFrame","mozRequestAnimationFrame","callback","setTimeout","noop","KEY_MAP","A","B","C","D","E","F","G","H","I","J","K","L","M","N","O","P","Q","R","S","T","U","V","W","X","Y","Z","ENTER","SHIFT","ESC","SPACE","LEFT","UP","RIGHT","DOWN","BACKSPACE","DELETE","TRANSPOSED_KEY_MAP","keysDown","Key","keyCode","cachedKeypressEvent","prototype","_downHandler","_upHandler","_pressHandler","bindOrFire","handlerName","opt_handler","opt_evt","isDown","down","up","press","unbindDown","unbindUp","unbindPress","kd","isRunning","now","Date","previousUpdateTime","tick","keyName","run","currentTime","timeSinceLastUpdate","call","stop","evt","isNew","ctrlKey","shiftKey","metaKey","mappedKey","module","exports","define","amd"],"mappings":"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","sourcesContent":["/*! keydrown - v1.2.2 - 2016-03-23 - http://jeremyckahn.github.com/keydrown */\n(function(window) {\n  var util = (function() {\n    var util = {};\n\n    /**\n     * @param {Object} obj The Object to iterate through.\n     * @param {function(*, string)} iterator The function to call for each property.\n     */\n    util.forEach = function(obj, iterator) {\n      var prop;\n      for (prop in obj) {\n        if (obj.hasOwnProperty(prop)) {\n          iterator(obj[prop], prop);\n        }\n      }\n    };\n    var forEach = util.forEach;\n\n    /**\n     * Create a transposed copy of an Object.\n     *\n     * @param {Object} obj\n     * @return {Object}\n     */\n    util.getTranspose = function(obj) {\n      var transpose = {};\n\n      forEach(obj, function(val, key) {\n        transpose[val] = key;\n      });\n\n      return transpose;\n    };\n\n    /**\n     * Implementation of Array#indexOf because IE<9 doesn't support it.\n     *\n     * @param {Array} arr\n     * @param {*} val\n     * @return {number} Index of the found element or -1 if not found.\n     */\n    util.indexOf = function(arr, val) {\n      if (arr.indexOf) {\n        return arr.indexOf(val);\n      }\n\n      var i,\n        len = arr.length;\n      for (i = 0; i < len; i++) {\n        if (arr[i] === val) {\n          return i;\n        }\n      }\n\n      return -1;\n    };\n    var indexOf = util.indexOf;\n\n    /**\n     * Push a value onto an array if it is not present in the array already.  Otherwise, this is a no-op.\n     *\n     * @param {Array} arr\n     * @param {*} val\n     * @return {boolean} Whether or not the value was added to the array.\n     */\n    util.pushUnique = function(arr, val) {\n      if (indexOf(arr, val) === -1) {\n        arr.push(val);\n        return true;\n      }\n\n      return false;\n    };\n\n    /**\n     * Remove a value from an array.  Assumes there is only one instance of the\n     * value present in the array.\n     *\n     * @param {Array} arr\n     * @param {*} val\n     * @return {*} The value that was removed from arr.  Returns undefined if\n     * nothing was removed.\n     */\n    util.removeValue = function(arr, val) {\n      var index = indexOf(arr, val);\n\n      if (index !== -1) {\n        return arr.splice(index, 1)[0];\n      }\n    };\n\n    /**\n     * Cross-browser function for listening for and handling an event on the\n     * document element.\n     *\n     * @param {string} eventName\n     * @param {function} handler\n     */\n    util.documentOn = function(eventName, handler) {\n      if (window.addEventListener) {\n        window.addEventListener(eventName, handler, false);\n      } else if (document.attachEvent) {\n        document.attachEvent(\"on\" + eventName, handler);\n      }\n    };\n\n    /**\n     * Shim for requestAnimationFrame.  See:\n     * http://paulirish.com/2011/requestanimationframe-for-smart-animating/\n     */\n    util.requestAnimationFrame = (function() {\n      return (\n        window.requestAnimationFrame ||\n        window.webkitRequestAnimationFrame ||\n        window.mozRequestAnimationFrame ||\n        function(callback) {\n          window.setTimeout(callback, 1000 / 60);\n        }\n      );\n    })();\n\n    /**\n     * An empty function.  NOOP!\n     */\n    util.noop = function() {};\n\n    return util;\n  })();\n\n  /**\n   * Lookup table of keys to keyCodes.\n   *\n   * @type {Object.<number>}\n   */\n  var KEY_MAP = {\n    A: 65,\n    B: 66,\n    C: 67,\n    D: 68,\n    E: 69,\n    F: 70,\n    G: 71,\n    H: 72,\n    I: 73,\n    J: 74,\n    K: 75,\n    L: 76,\n    M: 77,\n    N: 78,\n    O: 79,\n    P: 80,\n    Q: 81,\n    R: 82,\n    S: 83,\n    T: 84,\n    U: 85,\n    V: 86,\n    W: 87,\n    X: 88,\n    Y: 89,\n    Z: 90,\n    ENTER: 13,\n    SHIFT: 16,\n    ESC: 27,\n    SPACE: 32,\n    LEFT: 37,\n    UP: 38,\n    RIGHT: 39,\n    DOWN: 40,\n    BACKSPACE: 8,\n    DELETE: 46\n  };\n\n  /**\n   * The transposed version of KEY_MAP.\n   *\n   * @type {Object.<string>}\n   */\n  var TRANSPOSED_KEY_MAP = util.getTranspose(KEY_MAP);\n\n  /*!\n   * @type Array.<string>\n   */\n  var keysDown = [];\n\n  var Key = (function() {\n    \"use strict\";\n\n    /**\n     * Represents a key on the keyboard.  You'll never actually call this method\n     * directly; Key Objects for every key that Keydrown supports are created for\n     * you when the library is initialized (as in, when the file is loaded).  You\n     * will, however, use the `prototype` methods below to bind functions to key\n     * states.\n     *\n     * @param {number} keyCode The keyCode of the key.\n     * @constructor\n     * @class kd.Key\n     */\n    function Key(keyCode) {\n      this.keyCode = keyCode;\n      this.cachedKeypressEvent = null;\n    }\n\n    /*!\n     * The function to be invoked on every tick that the key is held down for.\n     *\n     * @type {function}\n     */\n    Key.prototype._downHandler = util.noop;\n\n    /*!\n     * The function to be invoked when the key is released.\n     *\n     * @type {function}\n     */\n    Key.prototype._upHandler = util.noop;\n\n    /*!\n     * The function to be invoked when the key is pressed.\n     *\n     * @type {function}\n     */\n    Key.prototype._pressHandler = util.noop;\n\n    /*!\n     * Private helper function that binds or invokes a hander for `down`, `up',\n     * or `press` for a `Key`.\n     *\n     * @param {Key} key\n     * @param {string} handlerName\n     * @param {function=} opt_handler If omitted, the handler is invoked.\n     * @param {KeyboardEvent=} opt_evt If this function is being called by a\n     * keyboard event handler, this is the raw KeyboardEvent Object provided from\n     * the browser.\n     */\n    function bindOrFire(key, handlerName, opt_handler, opt_evt) {\n      if (opt_handler) {\n        key[handlerName] = opt_handler;\n      } else {\n        key[handlerName](opt_evt);\n      }\n    }\n\n    /**\n     * Returns whether the key is currently pressed or not.\n     *\n     * @method isDown\n     * @return {boolean} True if the key is down, otherwise false.\n     */\n    Key.prototype.isDown = function() {\n      return util.indexOf(keysDown, this.keyCode) !== -1;\n    };\n\n    /**\n     * Bind a function to be called when the key is held down.\n     *\n     * @method down\n     * @param {function=} opt_handler The function to be called when the key is\n     * held down.  If omitted, this function invokes whatever handler was\n     * previously bound.\n     */\n    Key.prototype.down = function(opt_handler) {\n      bindOrFire(this, \"_downHandler\", opt_handler, this.cachedKeypressEvent);\n    };\n\n    /**\n     * Bind a function to be called when the key is released.\n     *\n     * @method up\n     * @param {function=} opt_handler The function to be called when the key is\n     * released.  If omitted, this function invokes whatever handler was\n     * previously bound.\n     * @param {KeyboardEvent=} opt_evt If this function is being called by the\n     * keyup event handler, this is the raw KeyboardEvent Object provided from\n     * the browser.  This should generally not be provided by client code.\n     */\n    Key.prototype.up = function(opt_handler, opt_evt) {\n      bindOrFire(this, \"_upHandler\", opt_handler, opt_evt);\n    };\n\n    /**\n     * Bind a function to be called when the key is pressed.  This handler will\n     * not fire again until the key is released â€” it does not repeat.\n     *\n     * @method press\n     * @param {function=} opt_handler The function to be called once when the key\n     * is pressed.  If omitted, this function invokes whatever handler was\n     * previously bound.\n     * @param {KeyboardEvent=} opt_evt If this function is being called by the\n     * keydown event handler, this is the raw KeyboardEvent Object provided from\n     * the browser.  This should generally not be provided by client code.\n     */\n    Key.prototype.press = function(opt_handler, opt_evt) {\n      this.cachedKeypressEvent = opt_evt;\n      bindOrFire(this, \"_pressHandler\", opt_handler, opt_evt);\n    };\n\n    /**\n     * Remove the handler that was bound with `{{#crossLink\n     * \"kd.Key/down:method\"}}{{/crossLink}}`.\n     * @method unbindDown\n     */\n    Key.prototype.unbindDown = function() {\n      this._downHandler = util.noop;\n    };\n\n    /**\n     * Remove the handler that was bound with `{{#crossLink\n     * \"kd.Key/up:method\"}}{{/crossLink}}`.\n     * @method unbindUp\n     */\n    Key.prototype.unbindUp = function() {\n      this._upHandler = util.noop;\n    };\n\n    /**\n     * Remove the handler that was bound with `{{#crossLink\n     * \"kd.Key/press:method\"}}{{/crossLink}}`.\n     * @method unbindPress\n     */\n    Key.prototype.unbindPress = function() {\n      this._pressHandler = util.noop;\n    };\n\n    return Key;\n  })();\n\n  var kd = (function(keysDown) {\n    \"use strict\";\n\n    /**\n     * @class kd\n     */\n    var kd = {};\n    kd.Key = Key;\n\n    var isRunning = false;\n\n    var now = Date.now\n      ? Date.now\n      : function() {\n          return +new Date();\n        };\n\n    var previousUpdateTime = now();\n\n    /**\n     * Evaluate which keys are held down and invoke their handler functions.\n     * @method tick\n     */\n    kd.tick = function() {\n      var i,\n        len = keysDown.length;\n      for (i = 0; i < len; i++) {\n        var keyCode = keysDown[i];\n\n        var keyName = TRANSPOSED_KEY_MAP[keyCode];\n        if (keyName) {\n          kd[keyName].down();\n        }\n      }\n    };\n\n    /**\n     * A basic run loop.  `handler` gets called approximately 60 times a second.\n     *\n     * @param {Function(number, number)} handler The callback function to call on\n     * every tick.  You likely want to call [kd.tick](#method_tick) in this\n     * function.  This callback receives the time elapsed since the previous\n     * execution of the callback as the first parameter, and the current time\n     * stamp as the second.\n     * @method run\n     */\n    kd.run = function(handler) {\n      isRunning = true;\n      var currentTime = now();\n      var timeSinceLastUpdate = currentTime - previousUpdateTime;\n\n      util.requestAnimationFrame.call(window, function() {\n        if (!isRunning) {\n          return;\n        }\n\n        kd.run(handler);\n        handler(timeSinceLastUpdate, currentTime);\n      });\n\n      previousUpdateTime = currentTime;\n    };\n\n    /**\n     * Cancels the loop created by [run](#method_run).\n     * @method stop\n     */\n    kd.stop = function() {\n      isRunning = false;\n    };\n\n    // SETUP\n    //\n\n    // Initialize the KEY Objects\n    util.forEach(KEY_MAP, function(keyCode, keyName) {\n      kd[keyName] = new Key(keyCode);\n    });\n\n    util.documentOn(\"keydown\", function(evt) {\n      var keyCode = evt.keyCode;\n      var keyName = TRANSPOSED_KEY_MAP[keyCode];\n      var isNew = util.pushUnique(keysDown, keyCode);\n      var key = kd[keyName];\n\n      if (key) {\n        var cachedKeypressEvent = key.cachedKeypressEvent || {};\n\n        // If a modifier key was held down the last time that this button was\n        // pressed, and it is pressed again without the modifier key being\n        // released, it is considered a newly-pressed key.  This is to work\n        // around the fact that the \"keyup\" event does not fire for the modified\n        // key until the modifier button is also released, which poses a problem\n        // for repeated, modified key presses such as hitting ctrl/meta+Z for\n        // rapid \"undo\" actions.\n        if (\n          cachedKeypressEvent.ctrlKey ||\n          cachedKeypressEvent.shiftKey ||\n          cachedKeypressEvent.metaKey\n        ) {\n          isNew = true;\n        }\n\n        if (isNew) {\n          key.press(null, evt);\n        }\n      }\n    });\n\n    util.documentOn(\"keyup\", function(evt) {\n      var keyCode = util.removeValue(keysDown, evt.keyCode);\n\n      var keyName = TRANSPOSED_KEY_MAP[keyCode];\n      if (keyName) {\n        kd[keyName].up(null, evt);\n      }\n    });\n\n    // Stop firing the \"down\" handlers if the user loses focus of the browser\n    // window.\n    util.documentOn(\"blur\", function(evt) {\n      // Fire the \"up\" handler for each key that is currently held down\n      util.forEach(keysDown, function(keyCode) {\n        var mappedKey = TRANSPOSED_KEY_MAP[keyCode];\n        if (mappedKey) {\n          kd[mappedKey].up();\n        }\n      });\n\n      keysDown.length = 0;\n    });\n\n    return kd;\n\n    // The variables passed into the closure here are defined in kd.key.js.\n  })(keysDown);\n\n  if (typeof module === \"object\" && typeof module.exports === \"object\") {\n    // Keydrown was loaded as a CommonJS module (by Browserify, for example).\n    module.exports = kd;\n  } else if (typeof define === \"function\" && define.amd) {\n    // Keydrown was loaded as an AMD module.\n    define(function() {\n      return kd;\n    });\n  } else {\n    window.kd = kd;\n  }\n})(window);\n"]},"metadata":{},"sourceType":"module"}