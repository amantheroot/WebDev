{"ast":null,"code":"import _taggedTemplateLiteral from \"/opt/lampp/htdocs/WebDev/Front End/React.js/ReactJS/ReactJS Project/the_projects/node_modules/@babel/runtime/helpers/esm/taggedTemplateLiteral\";\nimport _classCallCheck from \"/opt/lampp/htdocs/WebDev/Front End/React.js/ReactJS/ReactJS Project/the_projects/node_modules/@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"/opt/lampp/htdocs/WebDev/Front End/React.js/ReactJS/ReactJS Project/the_projects/node_modules/@babel/runtime/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"/opt/lampp/htdocs/WebDev/Front End/React.js/ReactJS/ReactJS Project/the_projects/node_modules/@babel/runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"/opt/lampp/htdocs/WebDev/Front End/React.js/ReactJS/ReactJS Project/the_projects/node_modules/@babel/runtime/helpers/esm/getPrototypeOf\";\nimport _inherits from \"/opt/lampp/htdocs/WebDev/Front End/React.js/ReactJS/ReactJS Project/the_projects/node_modules/@babel/runtime/helpers/esm/inherits\";\nvar _jsxFileName = \"/opt/lampp/htdocs/WebDev/Front End/React.js/ReactJS/ReactJS Project/the_projects/src/components/clock/app.jsx\";\n\nfunction _templateObject() {\n  var data = _taggedTemplateLiteral([\"\\n        font-family: sans-serif;\\n        width: 100%;\\n        .app {\\n          margin: auto;\\n          .top {\\n            /* The switch - the box around the slider */\\n            .switch {\\n              position: relative;\\n              display: inline-block;\\n              width: 60px;\\n              height: 34px;\\n            }\\n\\n            /* Hide default HTML checkbox */\\n            .switch input {\\n              opacity: 0;\\n              width: 0;\\n              height: 0;\\n            }\\n\\n            /* The slider */\\n            .slider {\\n              position: absolute;\\n              cursor: pointer;\\n              top: 0;\\n              left: 0;\\n              right: 0;\\n              bottom: 0;\\n              background-color: #ccc;\\n              -webkit-transition: 0.4s;\\n              transition: 0.4s;\\n            }\\n\\n            .slider:before {\\n              position: absolute;\\n              content: \\\"\\\";\\n              height: 26px;\\n              width: 26px;\\n              left: 4px;\\n              bottom: 4px;\\n              background-color: white;\\n              -webkit-transition: 0.4s;\\n              transition: 0.4s;\\n            }\\n\\n            input:checked + .slider {\\n              background-color: #2196f3;\\n            }\\n\\n            input:focus + .slider {\\n              box-shadow: 0 0 1px #2196f3;\\n            }\\n\\n            input:checked + .slider:before {\\n              -webkit-transform: translateX(26px);\\n              -ms-transform: translateX(26px);\\n              transform: translateX(26px);\\n            }\\n\\n            /* Rounded sliders */\\n            .slider.round {\\n              border-radius: 34px;\\n            }\\n\\n            .slider.round:before {\\n              border-radius: 50%;\\n            }\\n          }\\n        }\\n      \"]);\n\n  _templateObject = function _templateObject() {\n    return data;\n  };\n\n  return data;\n}\n\nimport React, { Component } from \"react\";\nimport { observer } from \"mobx-react\";\nimport styled from \"styled-components\";\nvar Clock = observer(\n/*#__PURE__*/\nfunction (_Component) {\n  _inherits(Clock, _Component);\n\n  function Clock() {\n    var _getPrototypeOf2;\n\n    var _this;\n\n    _classCallCheck(this, Clock);\n\n    for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {\n      args[_key] = arguments[_key];\n    }\n\n    _this = _possibleConstructorReturn(this, (_getPrototypeOf2 = _getPrototypeOf(Clock)).call.apply(_getPrototypeOf2, [this].concat(args)));\n\n    _this.toggleShowDate = function () {\n      _this.props.store.showDate = !_this.props.store.showDate;\n    };\n\n    return _this;\n  }\n\n  _createClass(Clock, [{\n    key: \"componentWillMount\",\n    value: function componentWillMount() {\n      var _this2 = this;\n\n      setInterval(function () {\n        _this2.props.store.d = new Date();\n      }, 1000);\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      var Container = styled.div(_templateObject());\n      var d = this.props.store.d;\n      var hour = d.getHours() < 10 ? \"0\".concat(d.getHours()) : \"\".concat(d.getHours());\n      var minute = d.getMinutes() < 10 ? \"0\".concat(d.getMinutes()) : \"\".concat(d.getMinutes());\n      var second = d.getSeconds() < 10 ? \"0\".concat(d.getSeconds()) : \"\".concat(d.getSeconds());\n      var time = \"\".concat(hour, \":\").concat(minute, \":\").concat(second);\n      var weekday;\n\n      switch (d.getDay()) {\n        case 0:\n          weekday = \"Sun\";\n          break;\n\n        case 1:\n          weekday = \"Mon\";\n          break;\n\n        case 2:\n          weekday = \"Tue\";\n          break;\n\n        case 3:\n          weekday = \"Wed\";\n          break;\n\n        case 4:\n          weekday = \"Thu\";\n          break;\n\n        case 5:\n          weekday = \"Fri\";\n          break;\n\n        case 6:\n          weekday = \"Sat\";\n          break;\n\n        default:\n          throw console.error(\"Invalid WeekDay\");\n      }\n\n      var day = d.getDate();\n      var month;\n\n      switch (d.getMonth()) {\n        case 0:\n          month = \"January\";\n          break;\n\n        case 1:\n          month = \"February\";\n          break;\n\n        case 2:\n          month = \"March\";\n          break;\n\n        case 3:\n          month = \"April\";\n          break;\n\n        case 4:\n          month = \"May\";\n          break;\n\n        case 5:\n          month = \"June\";\n          break;\n\n        case 6:\n          month = \"July\";\n          break;\n\n        case 7:\n          month = \"August\";\n          break;\n\n        case 8:\n          month = \"September\";\n          break;\n\n        case 9:\n          month = \"October\";\n          break;\n\n        case 10:\n          month = \"November\";\n          break;\n\n        case 11:\n          month = \"December\";\n          break;\n\n        default:\n          throw console.error(\"Invalid Month\");\n      }\n\n      var year = d.getFullYear();\n      var date = \"\".concat(weekday, \" \").concat(day, \" \").concat(month, \" \").concat(year);\n      return React.createElement(Container, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 167\n        },\n        __self: this\n      }, React.createElement(\"div\", {\n        className: \"app\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 168\n        },\n        __self: this\n      }, React.createElement(\"div\", {\n        className: \"top\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 169\n        },\n        __self: this\n      }, React.createElement(\"label\", {\n        className: \"switch\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 170\n        },\n        __self: this\n      }, React.createElement(\"input\", {\n        type: \"checkbox\",\n        onChange: this.toggleShowDate,\n        checked: this.props.store.showDate,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 171\n        },\n        __self: this\n      }), React.createElement(\"span\", {\n        className: \"slider round\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 176\n        },\n        __self: this\n      })), React.createElement(\"span\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 178\n        },\n        __self: this\n      }, \"Date\")), React.createElement(\"div\", {\n        className: \"clock\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 180\n        },\n        __self: this\n      }, React.createElement(\"div\", {\n        className: \"clock__inner\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 181\n        },\n        __self: this\n      }, React.createElement(\"div\", {\n        className: \"time\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 182\n        },\n        __self: this\n      }, time), this.props.store.showDate ? React.createElement(\"div\", {\n        className: \"date\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 184\n        },\n        __self: this\n      }, date) : null))));\n    }\n  }]);\n\n  return Clock;\n}(Component));\nexport default Clock;","map":{"version":3,"sources":["/opt/lampp/htdocs/WebDev/Front End/React.js/ReactJS/ReactJS Project/the_projects/src/components/clock/app.jsx"],"names":["React","Component","observer","styled","Clock","toggleShowDate","props","store","showDate","setInterval","d","Date","Container","div","hour","getHours","minute","getMinutes","second","getSeconds","time","weekday","getDay","console","error","day","getDate","month","getMonth","year","getFullYear","date"],"mappings":"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","sourcesContent":["import React, { Component } from \"react\";\nimport { observer } from \"mobx-react\";\nimport styled from \"styled-components\";\n\nconst Clock = observer(\n  class Clock extends Component {\n    componentWillMount() {\n      setInterval(() => {\n        this.props.store.d = new Date();\n      }, 1000);\n    }\n    toggleShowDate = () => {\n      this.props.store.showDate = !this.props.store.showDate;\n    };\n    render() {\n      const Container = styled.div`\n        font-family: sans-serif;\n        width: 100%;\n        .app {\n          margin: auto;\n          .top {\n            /* The switch - the box around the slider */\n            .switch {\n              position: relative;\n              display: inline-block;\n              width: 60px;\n              height: 34px;\n            }\n\n            /* Hide default HTML checkbox */\n            .switch input {\n              opacity: 0;\n              width: 0;\n              height: 0;\n            }\n\n            /* The slider */\n            .slider {\n              position: absolute;\n              cursor: pointer;\n              top: 0;\n              left: 0;\n              right: 0;\n              bottom: 0;\n              background-color: #ccc;\n              -webkit-transition: 0.4s;\n              transition: 0.4s;\n            }\n\n            .slider:before {\n              position: absolute;\n              content: \"\";\n              height: 26px;\n              width: 26px;\n              left: 4px;\n              bottom: 4px;\n              background-color: white;\n              -webkit-transition: 0.4s;\n              transition: 0.4s;\n            }\n\n            input:checked + .slider {\n              background-color: #2196f3;\n            }\n\n            input:focus + .slider {\n              box-shadow: 0 0 1px #2196f3;\n            }\n\n            input:checked + .slider:before {\n              -webkit-transform: translateX(26px);\n              -ms-transform: translateX(26px);\n              transform: translateX(26px);\n            }\n\n            /* Rounded sliders */\n            .slider.round {\n              border-radius: 34px;\n            }\n\n            .slider.round:before {\n              border-radius: 50%;\n            }\n          }\n        }\n      `;\n      const d = this.props.store.d;\n\n      const hour = d.getHours() < 10 ? `0${d.getHours()}` : `${d.getHours()}`;\n      const minute =\n        d.getMinutes() < 10 ? `0${d.getMinutes()}` : `${d.getMinutes()}`;\n      const second =\n        d.getSeconds() < 10 ? `0${d.getSeconds()}` : `${d.getSeconds()}`;\n      const time = `${hour}:${minute}:${second}`;\n\n      let weekday;\n      switch (d.getDay()) {\n        case 0:\n          weekday = \"Sun\";\n          break;\n        case 1:\n          weekday = \"Mon\";\n          break;\n        case 2:\n          weekday = \"Tue\";\n          break;\n        case 3:\n          weekday = \"Wed\";\n          break;\n        case 4:\n          weekday = \"Thu\";\n          break;\n        case 5:\n          weekday = \"Fri\";\n          break;\n        case 6:\n          weekday = \"Sat\";\n          break;\n        default:\n          throw console.error(\"Invalid WeekDay\");\n      }\n      let day = d.getDate();\n      let month;\n      switch (d.getMonth()) {\n        case 0:\n          month = \"January\";\n          break;\n        case 1:\n          month = \"February\";\n          break;\n        case 2:\n          month = \"March\";\n          break;\n        case 3:\n          month = \"April\";\n          break;\n        case 4:\n          month = \"May\";\n          break;\n        case 5:\n          month = \"June\";\n          break;\n        case 6:\n          month = \"July\";\n          break;\n        case 7:\n          month = \"August\";\n          break;\n        case 8:\n          month = \"September\";\n          break;\n        case 9:\n          month = \"October\";\n          break;\n        case 10:\n          month = \"November\";\n          break;\n        case 11:\n          month = \"December\";\n          break;\n        default:\n          throw console.error(\"Invalid Month\");\n      }\n      let year = d.getFullYear();\n      const date = `${weekday} ${day} ${month} ${year}`;\n      return (\n        <Container>\n          <div className=\"app\">\n            <div className=\"top\">\n              <label className=\"switch\">\n                <input\n                  type=\"checkbox\"\n                  onChange={this.toggleShowDate}\n                  checked={this.props.store.showDate}\n                />\n                <span className=\"slider round\" />\n              </label>\n              <span>Date</span>\n            </div>\n            <div className=\"clock\">\n              <div className=\"clock__inner\">\n                <div className=\"time\">{time}</div>\n                {this.props.store.showDate ? (\n                  <div className=\"date\">{date}</div>\n                ) : null}\n              </div>\n            </div>\n          </div>\n        </Container>\n      );\n    }\n  }\n);\n\nexport default Clock;\n"]},"metadata":{},"sourceType":"module"}