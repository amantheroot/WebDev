{"ast":null,"code":"import _classCallCheck from \"/opt/lampp/htdocs/WebDev/Front End/React.js/ReactJS/ReactJS Project/the_projects/node_modules/@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"/opt/lampp/htdocs/WebDev/Front End/React.js/ReactJS/ReactJS Project/the_projects/node_modules/@babel/runtime/helpers/esm/createClass\";\nimport { observable, decorate, computed } from \"mobx\";\n\nvar TimerStore =\n/*#__PURE__*/\nfunction () {\n  function TimerStore() {\n    _classCallCheck(this, TimerStore);\n\n    this.seconds = 0;\n    this.start = false;\n  }\n\n  _createClass(TimerStore, [{\n    key: \"time\",\n    get: function get() {\n      var s = this.seconds;\n      var hr = Math.floor(s / 60 / 60);\n      var min = Math.floor((s - hr * 60 * 60) / 60);\n      var sec = s - hr * 60 * 60 - min * 60 * 60;\n      var ms = 0;\n    }\n  }]);\n\n  return TimerStore;\n}();\n\ndecorate(TimerStore, {\n  seconds: observable,\n  start: observable,\n  time: computed\n});\nexport default new TimerStore();","map":{"version":3,"sources":["/opt/lampp/htdocs/WebDev/Front End/React.js/ReactJS/ReactJS Project/the_projects/src/stores/timer/store.js"],"names":["observable","decorate","computed","TimerStore","seconds","start","s","hr","Math","floor","min","sec","ms","time"],"mappings":";;AAAA,SAASA,UAAT,EAAqBC,QAArB,EAA+BC,QAA/B,QAA+C,MAA/C;;IAEMC,U;;;;;;SACJC,O,GAAU,C;SACVC,K,GAAQ,K;;;;;wBACG;AACT,UAAIC,CAAC,GAAG,KAAKF,OAAb;AACA,UAAIG,EAAE,GAAGC,IAAI,CAACC,KAAL,CAAWH,CAAC,GAAG,EAAJ,GAAS,EAApB,CAAT;AACA,UAAII,GAAG,GAAGF,IAAI,CAACC,KAAL,CAAW,CAACH,CAAC,GAAGC,EAAE,GAAG,EAAL,GAAU,EAAf,IAAqB,EAAhC,CAAV;AACA,UAAII,GAAG,GAAGL,CAAC,GAAGC,EAAE,GAAG,EAAL,GAAU,EAAd,GAAmBG,GAAG,GAAG,EAAN,GAAW,EAAxC;AACA,UAAIE,EAAE,GAAG,CAAT;AACD;;;;;;AAEHX,QAAQ,CAACE,UAAD,EAAa;AACnBC,EAAAA,OAAO,EAAEJ,UADU;AAEnBK,EAAAA,KAAK,EAAEL,UAFY;AAGnBa,EAAAA,IAAI,EAAEX;AAHa,CAAb,CAAR;AAMA,eAAe,IAAIC,UAAJ,EAAf","sourcesContent":["import { observable, decorate, computed } from \"mobx\";\n\nclass TimerStore {\n  seconds = 0;\n  start = false;\n  get time() {\n    let s = this.seconds;\n    let hr = Math.floor(s / 60 / 60);\n    let min = Math.floor((s - hr * 60 * 60) / 60);\n    let sec = s - hr * 60 * 60 - min * 60 * 60;\n    let ms = 0;\n  }\n}\ndecorate(TimerStore, {\n  seconds: observable,\n  start: observable,\n  time: computed\n});\n\nexport default new TimerStore();\n"]},"metadata":{},"sourceType":"module"}