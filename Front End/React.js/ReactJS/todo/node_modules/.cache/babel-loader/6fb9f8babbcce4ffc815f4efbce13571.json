{"ast":null,"code":"import _classCallCheck from \"/opt/lampp/htdocs/WebDev/Front End/React.js/ReactJS/todo/node_modules/@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"/opt/lampp/htdocs/WebDev/Front End/React.js/ReactJS/todo/node_modules/@babel/runtime/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"/opt/lampp/htdocs/WebDev/Front End/React.js/ReactJS/todo/node_modules/@babel/runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"/opt/lampp/htdocs/WebDev/Front End/React.js/ReactJS/todo/node_modules/@babel/runtime/helpers/esm/getPrototypeOf\";\nimport _inherits from \"/opt/lampp/htdocs/WebDev/Front End/React.js/ReactJS/todo/node_modules/@babel/runtime/helpers/esm/inherits\";\nvar _jsxFileName = \"/opt/lampp/htdocs/WebDev/Front End/React.js/ReactJS/todo/src/components/adder.jsx\";\nimport React, { Component } from \"react\";\n\nvar Adder =\n/*#__PURE__*/\nfunction (_Component) {\n  _inherits(Adder, _Component);\n\n  function Adder() {\n    _classCallCheck(this, Adder);\n\n    return _possibleConstructorReturn(this, _getPrototypeOf(Adder).apply(this, arguments));\n  }\n\n  _createClass(Adder, [{\n    key: \"componentDidMount\",\n    value: function componentDidMount() {\n      var _this = this;\n\n      this.refs.input.addEventListener(\"keypress\", function (e) {\n        if (e.keyCode === 13) {\n          _this.props.onChange(_this.refs.input.value);\n\n          _this.refs.input.value = \"\";\n        }\n      });\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      var _this2 = this;\n\n      return React.createElement(\"div\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 14\n        },\n        __self: this\n      }, React.createElement(\"button\", {\n        onClick: function onClick() {\n          _this2.props.onChange(_this2.refs.input.value);\n\n          _this2.refs.input.value = \"\";\n        },\n        className: \"todo-button\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 15\n        },\n        __self: this\n      }, \"+\"), React.createElement(\"input\", {\n        className: \"todo-input\",\n        type: \"text\",\n        placeholder: \"Add A Task\",\n        autoFocus: true,\n        ref: \"input\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 24\n        },\n        __self: this\n      }));\n    }\n  }]);\n\n  return Adder;\n}(Component);\n\nexport default Adder;","map":{"version":3,"sources":["/opt/lampp/htdocs/WebDev/Front End/React.js/ReactJS/todo/src/components/adder.jsx"],"names":["React","Component","Adder","refs","input","addEventListener","e","keyCode","props","onChange","value"],"mappings":";;;;;;AAAA,OAAOA,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC;;IAEMC,K;;;;;;;;;;;;;wCACgB;AAAA;;AAClB,WAAKC,IAAL,CAAUC,KAAV,CAAgBC,gBAAhB,CAAiC,UAAjC,EAA6C,UAAAC,CAAC,EAAI;AAChD,YAAIA,CAAC,CAACC,OAAF,KAAc,EAAlB,EAAsB;AACpB,UAAA,KAAI,CAACC,KAAL,CAAWC,QAAX,CAAoB,KAAI,CAACN,IAAL,CAAUC,KAAV,CAAgBM,KAApC;;AACA,UAAA,KAAI,CAACP,IAAL,CAAUC,KAAV,CAAgBM,KAAhB,GAAwB,EAAxB;AACD;AACF,OALD;AAMD;;;6BACQ;AAAA;;AACP,aACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACE;AACE,QAAA,OAAO,EAAE,mBAAM;AACb,UAAA,MAAI,CAACF,KAAL,CAAWC,QAAX,CAAoB,MAAI,CAACN,IAAL,CAAUC,KAAV,CAAgBM,KAApC;;AACA,UAAA,MAAI,CAACP,IAAL,CAAUC,KAAV,CAAgBM,KAAhB,GAAwB,EAAxB;AACD,SAJH;AAKE,QAAA,SAAS,EAAC,aALZ;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,aADF,EAUE;AACE,QAAA,SAAS,EAAC,YADZ;AAEE,QAAA,IAAI,EAAC,MAFP;AAGE,QAAA,WAAW,EAAC,YAHd;AAIE,QAAA,SAAS,MAJX;AAKE,QAAA,GAAG,EAAC,OALN;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QAVF,CADF;AAoBD;;;;EA9BiBT,S;;AAiCpB,eAAeC,KAAf","sourcesContent":["import React, { Component } from \"react\";\n\nclass Adder extends Component {\n  componentDidMount() {\n    this.refs.input.addEventListener(\"keypress\", e => {\n      if (e.keyCode === 13) {\n        this.props.onChange(this.refs.input.value);\n        this.refs.input.value = \"\";\n      }\n    });\n  }\n  render() {\n    return (\n      <div>\n        <button\n          onClick={() => {\n            this.props.onChange(this.refs.input.value);\n            this.refs.input.value = \"\";\n          }}\n          className=\"todo-button\"\n        >\n          +\n        </button>\n        <input\n          className=\"todo-input\"\n          type=\"text\"\n          placeholder=\"Add A Task\"\n          autoFocus\n          ref=\"input\"\n        />\n      </div>\n    );\n  }\n}\n\nexport default Adder;\n"]},"metadata":{},"sourceType":"module"}